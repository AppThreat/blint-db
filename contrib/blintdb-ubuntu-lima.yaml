images:
- location: "https://cloud-images.ubuntu.com/releases/24.10/release-20241109/ubuntu-24.10-server-cloudimg-amd64.img"
  arch: "x86_64"
  digest: "sha256:05bbfe57d7701c685d8c65f4d34cebe947bc89e3509c4d8a2b9c77f39e91f3ca"
- location: "https://cloud-images.ubuntu.com/releases/24.10/release-20241109/ubuntu-24.10-server-cloudimg-arm64.img"
  arch: "aarch64"
  digest: "sha256:0f1d5b8318342201e4200f592ff46c23ce29d486025b5b12b2036a6a009c93d8"
- location: "https://cloud-images.ubuntu.com/releases/24.10/release/ubuntu-24.10-server-cloudimg-amd64.img"
  arch: "x86_64"
- location: "https://cloud-images.ubuntu.com/releases/24.10/release/ubuntu-24.10-server-cloudimg-arm64.img"
  arch: "aarch64"
mounts:
- location: "/tmp/blintdb"
  writable: true
containerd:
  system: false
  user: true
env:
  VCPKG_DISABLE_METRICS: true
provision:
- mode: dependency
  skipDefaultDependencyResolution: false
  script: |
    #!/bin/bash
    set -eux -o pipefail
    apt update -y
    apt install -y autoconf libtool linux-libc-dev cmake zip unzip wget binutils git gnupg2 curl tar libc6-dev libcurl4 libcurl4-openssl-dev libedit2 libgcc-13-dev libpython3-dev libsqlite3-0 libstdc++-13-dev libxml2-dev libncurses-dev libz3-dev pkg-config tzdata zlib1g-dev python3.12 python3.12-venv python3.12-dev openjdk-21-jdk-headless gcc-13 build-essential cargo-1.81 rust-1.81-all software-properties-common docker.io docker-buildx docker-compose-v2 podman
    apt install -y ninja-build libgit2-dev libarchive-dev libyaml-dev libjansson-dev
    python3 -m pip install --no-cache-dir --upgrade pip virtualenv
    python3 -m pip install --no-cache-dir poetry uv
- mode: system
  script: |
    #!/bin/bash
    set -e -o pipefail
    curl -fsSL https://deb.nodesource.com/setup_23.x -o nodesource_setup.sh
    bash nodesource_setup.sh
    apt install -y nodejs
    rm nodesource_setup.sh
    npm install -g node-gyp @cyclonedx/cdxgen --omit=dev
    npx node-gyp install
    node -v
    npm -v
    gcc --version
    cdxgen --version
    git clone --depth=1 --branch=c https://github.com/leleliu008/ppkg
    cd ppkg
    cmake -S . -B   build.d -G Ninja -DCMAKE_INSTALL_PREFIX=/usr/local
    cmake --build   build.d
    cmake --install build.d
    cd ..
    rm -rf ppkg

name: Build and Upload meson blint-db 0.1.0

on:
  schedule:
  - cron: "0 */6 * * *"
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: appthreat/blintdb

jobs:
  builder-meson:
    runs-on: ['self-hosted', 'ubuntu', 'arm64']
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
      with:
        repository: AppThreat/blint-db
        path: blint-db
    # - name: Setup Ninja
    #   uses: ashutoshvarma/setup-ninja@master
    #   with:
    #     version: 1.10.0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build
        cd blint-db && python -m pip install .
        ls -ald ../temp/*/
        ls -ald ../temp/wrapdb/*/
    - name: Install apt package
      run: |
        sudo apt install libzmq3-dev libx11-dev qtbase5-dev libgl1-mesa-dev ninja-build file -y
    - name: Install ORAS
      run: |
        curl -LO "https://github.com/oras-project/oras/releases/download/v1.2.0/oras_1.2.0_linux_amd64.tar.gz"
        mkdir -p oras-install/
        tar -zxf oras_1.2.0_*.tar.gz -C oras-install/
        sudo mv oras-install/oras /usr/local/bin/
        rm -rf oras_1.2.0_*.tar.gz oras-install/
    - name: Build and upload db
      run: |
        mkdir -p temp
        python blint-db/blint_db/cli.py -Z1
        echo $GITHUB_TOKEN | oras login ghcr.io -u $GITHUB_USERNAME --password-stdin
        cd blint-db
        oras push ghcr.io/appthreat/blintdb-meson:v0.1 \
          --config ../.oras/config.json:application/vnd.oras.config.v1+json \
          --annotation-file ../.oras/annotations.json \
          ./blint.db:application/vnd.appthreat.vdb.layer.v1+tar \
        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: ${{ github.actor }}